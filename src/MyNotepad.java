
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author thuy
 */
public class MyNotepad extends javax.swing.JFrame {

    /**
     * Creates new form MyNotepad
     */
    int stateOfFile = 0;
    // 0 - not save
    // 1 - save

    public MyNotepad() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setVisible(true);
        this.setTitle(".txt");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanelWorkspace = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtArea = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        MenuItemCreate = new javax.swing.JMenuItem();
        MenuItemOpen = new javax.swing.JMenuItem();
        MenuItemSave = new javax.swing.JMenuItem();
        MenuItemExit = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        PanelWorkspace.setBackground(new java.awt.Color(255, 204, 204));
        PanelWorkspace.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtArea.setColumns(20);
        txtArea.setRows(5);
        jScrollPane1.setViewportView(txtArea);

        PanelWorkspace.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1060, 780));

        getContentPane().add(PanelWorkspace, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1060, 780));

        jMenu1.setText("File");

        MenuItemCreate.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        MenuItemCreate.setText("New File");
        MenuItemCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemCreateActionPerformed(evt);
            }
        });
        jMenu1.add(MenuItemCreate);

        MenuItemOpen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        MenuItemOpen.setText("Open File");
        MenuItemOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemOpenActionPerformed(evt);
            }
        });
        jMenu1.add(MenuItemOpen);

        MenuItemSave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        MenuItemSave.setText("Save File");
        MenuItemSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemSaveActionPerformed(evt);
            }
        });
        jMenu1.add(MenuItemSave);

        MenuItemExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0));
        MenuItemExit.setText("Exit");
        MenuItemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemExitActionPerformed(evt);
            }
        });
        jMenu1.add(MenuItemExit);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MenuItemCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemCreateActionPerformed

        String fName = JOptionPane.showInputDialog(rootPane, "Enter file name: ");
        File file = new File("E:\\SPR20\\PRJ\\SimpleNotepadApp\\workingfiles\\" + fName);
        if (file.exists()) {
            int choice = JOptionPane.showConfirmDialog(this, "File already exist!\n" + "Replace existed file?",
                    "Warning!!!", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (choice == JOptionPane.YES_OPTION) {
                file.delete();
                this.setTitle(fName);
                txtArea.setText("");
                try {
                    file.createNewFile();
                    stateOfFile = 0;
                } catch (IOException ex) {
                    Logger.getLogger(MyNotepad.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } else {
            this.setTitle(fName);
            txtArea.setText("");
            try {
                file.createNewFile();
                stateOfFile = 0;
            } catch (IOException ex) {
                Logger.getLogger(MyNotepad.class.getName()).log(Level.SEVERE, null, ex);
            }
        }


    }//GEN-LAST:event_MenuItemCreateActionPerformed

    private void MenuItemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemExitActionPerformed
        if (stateOfFile == 0) {
            MenuItemSaveActionPerformed(evt);
        }
        System.exit(0);
    }//GEN-LAST:event_MenuItemExitActionPerformed

    private void MenuItemSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemSaveActionPerformed

        try {
            String content = txtArea.getText();
            String fPath = "E:\\SPR20\\PRJ\\SimpleNotepadApp\\workingfiles\\" + this.getTitle();
            File file = new File(fPath);
            if (!file.exists()) {
                int choice = JOptionPane.showConfirmDialog(this, "No file created!\n" + "Create new file?",
                        "Warning!!!", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (choice == JOptionPane.YES_OPTION) {
                    MenuItemCreateActionPerformed(evt);
                    fPath = "E:\\SPR20\\PRJ\\SimpleNotepadApp\\workingfiles\\" + this.getTitle();
                    FileOutputStream fout = new FileOutputStream(fPath);
                    fout.write(content.getBytes());
                    fout.close();
                    stateOfFile = 1;
                } else {
                    return;
                }
            } else {
                FileOutputStream fout = new FileOutputStream(fPath);
                fout.write(content.getBytes());
                fout.close();
                stateOfFile = 1;
            }

        } catch (FileNotFoundException ex) {
            System.out.println("err");
            Logger.getLogger(MyNotepad.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MyNotepad.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_MenuItemSaveActionPerformed

    private void MenuItemOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemOpenActionPerformed
        // TODO add your handling code here:
        JFileChooser myFolder = new JFileChooser("E:\\SPR20\\PRJ\\SimpleNotepadApp\\workingfiles");
        int returnVal = myFolder.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = myFolder.getSelectedFile();
            FileInputStream fin = null;
            String content = "";
            try {
                fin = new FileInputStream(file);
                int i = 0;
                while ((i = fin.read()) != -1) {
                    content = content + (char) i;
                }
                txtArea.setText("");
                txtArea.setText(content);
                this.setTitle(file.getName());
                stateOfFile = 1;
                fin.close();
            } catch (Exception e) {
                System.out.println(e);
            } finally {
                try {
                    fin.close();
                } catch (IOException ex) {
                    Logger.getLogger(MyNotepad.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } else {

        }
    }//GEN-LAST:event_MenuItemOpenActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MyNotepad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MyNotepad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MyNotepad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MyNotepad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MyNotepad().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem MenuItemCreate;
    private javax.swing.JMenuItem MenuItemExit;
    private javax.swing.JMenuItem MenuItemOpen;
    private javax.swing.JMenuItem MenuItemSave;
    private javax.swing.JPanel PanelWorkspace;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtArea;
    // End of variables declaration//GEN-END:variables

}
